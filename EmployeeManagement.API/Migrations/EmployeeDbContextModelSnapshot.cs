// <auto-generated />
using EmployeeManagement.API.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.API.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.API.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = "Bandra",
                            City = "Mumbai",
                            EmployeeId = 1,
                            PinCode = "400050"
                        },
                        new
                        {
                            Id = 2,
                            Area = "Connaught Place",
                            City = "Delhi",
                            EmployeeId = 2,
                            PinCode = "110001"
                        },
                        new
                        {
                            Id = 3,
                            Area = "Koramangala",
                            City = "Bangalore",
                            EmployeeId = 3,
                            PinCode = "560034"
                        },
                        new
                        {
                            Id = 4,
                            Area = "Gachibowli",
                            City = "Hyderabad",
                            EmployeeId = 4,
                            PinCode = "500032"
                        },
                        new
                        {
                            Id = 5,
                            Area = "Hinjewadi",
                            City = "Pune",
                            EmployeeId = 5,
                            PinCode = "411057"
                        },
                        new
                        {
                            Id = 6,
                            Area = "Andheri",
                            City = "Mumbai",
                            EmployeeId = 1,
                            PinCode = "400053"
                        },
                        new
                        {
                            Id = 7,
                            Area = "Saket",
                            City = "Delhi",
                            EmployeeId = 2,
                            PinCode = "110017"
                        },
                        new
                        {
                            Id = 8,
                            Area = "Indiranagar",
                            City = "Bangalore",
                            EmployeeId = 3,
                            PinCode = "560038"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.API.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportsToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportsToId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Designation = "Software Engineer",
                            FirstName = "Ramesh",
                            LastName = "Kumar"
                        },
                        new
                        {
                            Id = 2,
                            Designation = "Senior Developer",
                            FirstName = "Suresh",
                            LastName = "Singh",
                            ReportsToId = 1
                        },
                        new
                        {
                            Id = 3,
                            Designation = "Project Manager",
                            FirstName = "Priya",
                            LastName = "Sharma",
                            ReportsToId = 2
                        },
                        new
                        {
                            Id = 4,
                            Designation = "QA Engineer",
                            FirstName = "Anjali",
                            LastName = "Gupta",
                            ReportsToId = 1
                        },
                        new
                        {
                            Id = 5,
                            Designation = "DevOps Engineer",
                            FirstName = "Rajesh",
                            LastName = "Patel",
                            ReportsToId = 3
                        });
                });

            modelBuilder.Entity("EmployeeManagement.API.Models.Address", b =>
                {
                    b.HasOne("EmployeeManagement.API.Models.Employee", "Employee")
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagement.API.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.API.Models.Employee", "ReportsTo")
                        .WithMany()
                        .HasForeignKey("ReportsToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ReportsTo");
                });

            modelBuilder.Entity("EmployeeManagement.API.Models.Employee", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
